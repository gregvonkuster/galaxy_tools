<tool id="call_sites" name="CFSAN SNP pipeline: call sites" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>of high-confidence SNPs</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
    cp '$reference' 'reference.fasta' &&
    samtools faidx 'reference.fasta' &&  
    picard MarkDuplicates INPUT='$input' OUTPUT=/dev/stdout METRICS_FILE='$metrics' | samtools mpileup -f ./reference.fasta - -o '$pileup' &&
    varscan mpileup2snp '$pileup' --min_var-freq 0.90 --output-vcf 1 > '$calls' 
    ]]></command>
    <inputs>
        <param name="input" label="Read alignment to reference" type="data" format="bam"/>
        <param name="reference" label="FASTA Reference from your history" type="data" format="fasta"/>
    </inputs>
    <outputs>
        <data name="calls" label="${input.name.split(' ')[0]} unfiltered SNPs" format="vcf"/>
        <data name="pileup" label="${input.name.split(' ')[0]} pileup" format="pileup"/>
        <data name="metrics" label="Metrics from Picard" format="txt"/>
        <data label="S3 Cache log" name="cache_log" format="txt"/>
    </outputs>
    <tests>
        <test>
            <param name="reference" value="reference/lambda_virus.fasta"/>
            <param name="input" value="reads.bam"/>
            <output name="calls" value="var.flt.vcf"/>
            <output name="pileup" value="reads.all.pileup"/>
        </test>
    </tests>
    <help><![CDATA[
        <a href="http://snp-pipeline.readthedocs.io/en/latest/index.html">http://snp-pipeline.readthedocs.io/en/latest/index.html</a>
    ]]></help>
    <expand macro="citations"/>
</tool>
