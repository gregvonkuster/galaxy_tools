<tool id="validate_affy_metadata" name="Validate Affymetrix metadata" version="1.0.0">
    <description>for 96 well plate</description>
    <command detect_errors="exit_code"><![CDATA[
python '$__tool_directory__/validate_affy_metadata.py'
--input '$input'
--output '$output']]></command>
    <inputs>
        <param name="input" type="data" format="tabular" label="Affymetrix 96 well plate metadata file">
            <validator type="expression" message="96 well plate data must have 32 columns and no more than 96 lines of data"><![CDATA[value is not None and value.metadata.columns==32 and value.metadata.data_lines<=96]]></validator>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="tabular"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="affy_metadata.tabular" ftype="tabular"/>
            <output name="output" file="affy_metadata.tabular" ftype="tabular"/>
        </test>
    </tests>
    <help>
**What it does**

Validates an Affymetrix metadata file for 96 well plate data.  These files consist of 32 columns and no more than 96 data lines.
The tool will output the input file if it is valid.

-----

**Columns**

 * user_specimen_id
 * field_call
 * bcoral_genet_id
 * bsym_genet_id
 * reef
 * region
 * latitude
 * longitude
 * geographic_origin
 * colony_location
 * depth
 * disease_resist
 * bleach_resist
 * mortality
 * tle
 * spawning
 * collector_last_name
 * collector_first_name
 * org
 * collection_date
 * contact_email
 * seq_facility
 * array_version
 * public
 * public_after_date
 * sperm_motility
 * healing_time
 * dna_extraction_method
 * dna_concentration
 * registry_id
 * result_folder_name
 * plate_barcode
    </help>
    <citations>
        <citation type="bibtex">
            @misc{None,
            journal = {None},
            author = {Baums I},
            title = {Manuscript in preparation},
            year = {None},
            url = {http://baumslab.org}
        </citation>
    </citations>
</tool>

