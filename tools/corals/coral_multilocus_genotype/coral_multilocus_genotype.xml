<tool id="coral_multilocus_genotype" name="Coral multilocus genotype" version="1.0.0">
    <description>unique combination of alleles for loci</description>
    <requirements>
        <requirement type="package" version="1.16.0">bioconductor-snprelate</requirement>
        <requirement type="package" version="2.1.1">r-adegenet</requirement>
        <requirement type="package" version="5.1">r-ape</requirement>
        <requirement type="package" version="1.11.6">r-data.table</requirement>
        <requirement type="package" version="1.2.2">r-dbplyr</requirement>
        <requirement type="package" version="0.7.6">r-dplyr</requirement>
        <requirement type="package" version="3.0.0">r-ggplot2</requirement>
        <requirement type="package" version="1.20">r-knitr</requirement>
        <requirement type="package" version="3.3.0">r-maps</requirement>
        <requirement type="package" version="1.2.6">r-mapproj</requirement>
        <requirement type="package" version="1.6.0">r-optparse</requirement>
        <requirement type="package" version="2.8.1">r-poppr</requirement>
        <requirement type="package" version="1.1.2">r-rcolorbrewer</requirement>
        <requirement type="package" version="1.1.1">r-rpostgres</requirement>
        <requirement type="package" version="0.8.1">r-tidyr</requirement>
        <requirement type="package" version="1.8.0">r-vcfr</requirement>
        <requirement type="package" version="2.5_3">r-vegan</requirement>
        <requirement type="package" version="0.1.5">r-yarrr</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
#set output_data_dir = 'output_data_dir'
#set output_plots_dir = 'output_plots_dir'
mkdir $output_data_dir &&
mkdir $output_plots_dir &&
Rscript '$__tool_directory__/coral_multilocus_genotype.R'
--database_connection_string '$__app__.config.corals_database_connection'
--input_affy_metadata '$input_affy_metadata'
--input_pop_info '$input_pop_info'
--input_vcf '$input_vcf'
#if str($output_nj_phylogeny_tree) == "yes":
    --output_nj_phylogeny_tree '$output_nj_phylogeny_tree'
#end if
--output_stag_db_report '$output_stag_db_report'
&> '$output_log']]></command>
    <inputs>
        <param name="input_vcf" type="data" format="vcf" label="VCF file" />
        <param name="input_affy_metadata" type="data" format="tabular" label="Affymetrix 96 well plate file" />
        <param name="input_pop_info" type="data" format="txt" label="Genotype population information file" />
        <param name="output_nj_phylogeny_tree" type="select" display="radio" label="Plot neighbor-joining phylogeny tree?">
            <option value="yes">Yes</option>
            <option value="no" selected="true">No</option>
        </param>
    </inputs>
    <outputs>
        <collection name="output_data_collection" type="list" label="${tool.name} (table data), on ${on_string}">
            <discover_datasets pattern="__name__" directory="output_data_dir" format="tabular"/>
        </collection>
        <collection name="output_plot_collection" type="list" label="${tool.name} (plots), on ${on_string}">
            <discover_datasets pattern="__name__" directory="output_plots_dir" format="pdf"/>
        </collection>
        <data name="output_log" format="txt" label="${tool.name} (process log) on ${on_string}"/>
        <data name="output_stag_db_report" format="csv" label="${tool.name} (stag db report) on ${on_string}"/>
    </outputs>
    <tests>
        <test>
            <!--Testing this tool is a bit difficult at the current time.-->
        </test>
    </tests>
    <help>
**What it does**

Renders the unique combination of the alleles for two or more loci for each individual. The multilocus genotypes
are critically important for tracking dispersal and population structure of organisms, especially those that
reproduce clonally (plants, sponges, cnidarians, flatworms, annelids, sea stars, and many more).  The following
outputs are produced.

**Plots**

 * **ibs default** - identity-by-state analysis using the default clustering (Z threshold15, outlier detection 5) based on dissimilarity matrix of the samples with colors of terminal branches representing the identified groups.
 * **ibs region** - identity-by-state analysis using the collection region information to identify clusters based on dissimilarity matrix of samples with colors of terminal branches representing the collection region.
 * **missing data** - percent of missing allele calls for each sample.
 * **mlg map** - geographic map of the samples colored by their multilocus genotype id,
 * **percent breakdown** - average breakdown allele assignments across all samples and per sample.

**Table Data** - Data files containing all of the information for updating the stag database.

**Process Log** - the processing log produced by the tool.

**Stag DB Report** -  summary of the analysis that includes the multilocus genotype id, database match status, percent missing data, percent for each allele (homozygous AA, homozygous BB or heterozygous AB) and genetic coral species call.

    </help>
    <citations>
        <citation type="doi">https://doi.org/10.1038/s41598-020-69101-z</citation>
    </citations>
</tool>
