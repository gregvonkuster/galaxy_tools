<tool id="methylit_estimate_divergence" name="MethylIT: Estimate divergence" version="1.0.0">
    <description></description>
    <requirements>
        <requirement type="package" version="2.48.0">bioconductor-biobase</requirement>
        <requirement type="package" version="0.34.0">bioconductor-biocgenerics</requirement>
        <requirement type="package" version="1.22.0">bioconductor-biocparallel</requirement>
        <requirement type="package" version="1.40.0">bioconductor-genomicranges</requirement>
        <requirement type="package" version="1.24.0">bioconductor-genomeinfodb</requirement>
        <requirement type="package" version="2.22.1">bioconductor-iranges</requirement>
        <requirement type="package" version="0.26.0">bioconductor-s4vectors</requirement>
        <requirement type="package" version="0.3.2.1">r-methylit</requirement>
        <requirement type="package" version="1.6.6">r-optparse</requirement>
        <requirement type="package" version="1.8_4">r-xtable</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
#import os
#import re
#set meth_level = $meth_level_cond.meth_level
#set meth_level_columns_cond = $meth_level_cond.columns_cond
#set meth_level_columns = $meth_level_columns_cond.columns
#set input_indiv_dir='input_indiv_dir'
mkdir input_indiv_dir &&
#for $i in $indiv:
    #set file_name = $i.file_name
    #set identifier = re.sub('[^\s\w\-\\.]', '_', str($i.element_identifier))
    ln -s '$file_name' '$input_indiv_dir/$identifier' &&
#end for
Rscript '$__tool_directory__/methylit_estimate_divergence.R'
--ref '$ref'
--input_indiv_dir '$input_indiv_dir'
--bayesian '$bayesian'
#if str($meth_level) == 'no':
    ## meth_level is FALSE
    #if str($meth_level_columns) == 'yes':
        ## meth_level is FALSE and columns is NULL
        --col1 1
        --col2 2
    #else:
        ## meth_level is FALSE and columns is not NULL
        --col1 $meth_level_columns_cond.col1
        --col2 $meth_level_columns_cond.col2
    #end if
    #set compute_jd_cond = $meth_level_cond.compute_jd_cond
    #set compute_jd = $compute_jd_cond.compute_jd
    #if str($compute_jd) == 'yes':
        --jd $compute_jd_cond.jd
        --logbase $compute_jd_cond.logbase
    #end if
#else:
    ## meth_level is TRUE
    --meth_level $meth_level
    #if str($meth_level_columns) == 'no':
        ## meth_level is TRUE and columns is not NULL
        --col1 $meth_level_columns_cond.col1
        --col2 $meth_level_columns_cond.col2
    ## else  meth_level is TRUE and columns is NULL
        --col1 1
    #end if
#end if
--mcov1 $mcov1
#if str($min_coverage_cond.min_coverage) == 'yes':
    --mcov2 $min_coverage_cond.mcov2
#end if
--mmeth1 $mmeth1
#if str($min_meth_cond.min_meth) == 'yes':
    --mmeth2 $min_meth_cond.mmeth2
#end if
--mum1 $mum1
#if str($min_umeth_cond.min_umeth) == 'yes':
    --mum2 $min_umeth_cond.mum2
#end if
--min_sitecov $min_sitecov
#set set_high_coverage = $set_high_coverage_cond.set_high_coverage
#if str($set_high_coverage) == 'yes':
    --high_coverage $set_high_coverage_cond.high_coverage
#end if
--output_crc '$output_crc'
--percentile $percentile
--output_infdiv '$output_infdiv'
--num_cores \${GALAXY_SLOTS:-4}
--script_dir '$__tool_directory__'
#if str($output_log_cond.output_log) == 'yes':
    &>'$output_log';
#else:
    &>output_log.txt;
    if [[ $? -ne 0 ]]; then
        cp output_log.txt $output_infdiv;
    fi
#end if
]]></command>
    <inputs>
        <param name="ref" type="data" format="grange" label="GRange reference file" help="The reference individual that will be used in the estimation of the information divergence"/>
        <param name="indiv" type="data_collection" format="grange" collection_type="list" label="Collection of GRange files" help="The individuals that will be used in the estimation of the information divergence"/>
        <param name="bayesian" type="select" label="Perform the estimations based on posterior estimations of methylation levels?" help="--bayesian">
            <option value="no" selected="true">No</option>
            <option value="yes">Yes</option>
        </param>
        <conditional name="meth_level_cond">
            <param name="meth_level" type="select" label="Methylation levels are given in place of counts?">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no">
                <!-- meth_level is FALSE -->
                <conditional name="columns_cond">
                    <param name="columns" type="select" label="Use defaults for the columns corresponding to the methylation levels?" help="--columns">
                        <option value="yes" selected="true">Yes</option>
                        <option value="no">No</option>
                    </param>
                    <when value="no">
                        <!-- meth_level is FALSE and columns is not NULL -->
                        <param name="col1" type="integer" value="1" min="1" label="Column number of methylated read counts"/>
                        <param name="col2" type="integer" value="2" min="1" label="Column number of unmethylated read counts"/>
                    </when>
                    <when value="yes">
                        <!-- meth_level is FALSE and columns is NULL -->
                    </when>
                </conditional>
                <conditional name="compute_jd_cond">
                    <param name="compute_jd" type="select" label="Add a column with values of J-information divergence?">
                        <option value="no" selected="true">No</option>
                        <option value="yes">Yes</option>
                    </param>
                    <when value="no"/>
                    <when value="yes">
                        <param name="logbase" type="integer" value="2" min="1" label="Logarithm base used to compute the J-information divergence"/>
                    </when>
                </conditional>
            </when>
            <when value="yes">
                <!-- meth_level is TRUE -->
                <conditional name="columns_cond">
                    <param name="columns" type="select" label="Use defaults for the columns corresponding to the methylation levels?">
                        <option value="yes" selected="true">Yes</option>
                        <option value="no">No</option>
                    </param>
                    <when value="no">
                        <!-- meth_level is TRUE and columns is not NULL -->
                        <param name="col1" type="integer" value="1" min="1" label="Column number of methylation level p1"/>
                        <param name="col2" type="integer" value="2" min="1" label="Column number of methylation level p2"/>
                    </when>
                    <when value="yes">
                        <!-- meth_level is TRUE and columns is NULL -->
                    </when>
                </conditional>
            </when>
        </conditional>
        <param name="mcov1" type="integer" value="4" min="0" label="Minimum coverage for cytosine site in sample 1" help="--min.coverage"/>
        <conditional name="min_coverage_cond">
            <param name="min_coverage" type="select" label="Apply minimum coverage for cytosine site to each sample?">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="mcov2" type="integer" value="4" min="0" label="Minimum coverage for cytosine site in sample 2"/>
            </when>
        </conditional>
        <param name="mmeth1" type="integer" value="4" min="0" label="Minimum read counts of methylated cytosine in sample 1" help="--min.meth"/>
        <conditional name="min_meth_cond">
            <param name="min_meth" type="select" label="Apply minimum read counts of methylated cytosine to each sample?">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="mmeth2" type="integer" value="4" min="0" label="Minimum read counts of methylated cytosine in sample 2"/>
            </when>
        </conditional>
        <param name="mum1" type="integer" value="0" min="0" label="Minimum number of reads to consider cytosine position in sample 1" help="--min.umeth"/>
        <conditional name="min_umeth_cond">
            <param name="min_umeth" type="select" label="Apply minimum number of reads to consider cytosine position to each sample?">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="mum2" type="integer" value="0" min="0" label="Minimum number of reads to consider cytosine position in sample 2"/>
            </when>
        </conditional>
        <param name="min_sitecov" type="integer" value="4" min="0" label="Minimum total coverage for samples"/>
        <conditional name="set_high_coverage_cond">
            <param name="set_high_coverage" type="select" label="Specify high coverage floor?" help="Cytosine sites having higher coverage than this are discarded">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="high_coverage" type="integer" value="4" min="0" label="High coverage floor for samples" help="--high.coverage"/>
            </when>
        </conditional>
        <param name="percentile" type="float" value="0.9999" min="0" max="1" label="Threshold to remove the outliers from each file and all files stacked" />
        <conditional name="output_log_cond">
            <param name="output_log" type="select" label="Output process log?">
                <option value="yes" selected="true">Yes</option>
                <option value="no">No</option>
            </param>
            <when value="yes"/>
            <when value="no"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="output_log" format="txt" label="${tool.name} (process log) on ${on_string}">
            <filter>output_log_cond['output_log'] == 'yes'</filter>
        </data>
        <data name="output_crc" format="html" label="${tool.name} (statistics) on ${on_string}"/>
        <data name="output_infdiv" format="infdiv" label="${tool.name} (infDiv) on ${on_string}"/>
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**

Computes selected information divergences of methylation levels, with 2 levels computed by default: Hellinger divergence (\emph{H})
and the total variation distance (\emph{TVD}).  In the context of methylation analysis \emph{TVD} corresponds to the absolute
difference of methylation levels.  Here, although the variable reported is the total variation (\emph{TV}), the variable actually
used for the downstream analysis is \emph{TVD}. Once a differentially methylated position (DMP) is identified in the downstream
analysis, \emph{TV} is the standard indicator of whether the cytosine position is hyper- or hypo-methylated.
    </help>
    <expand macro="citations"/>
</tool>

