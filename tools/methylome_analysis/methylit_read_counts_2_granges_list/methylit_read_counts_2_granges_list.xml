<tool id="methylit_read_counts_2_granges_list" name="MethylIT: Convert Read counts" version="1.0.0">
    <description>to GRanges List</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="2.48.0">bioconductor-biobase</requirement>
        <requirement type="package" version="1.24.0">bioconductor-genomeinfodb</requirement>
        <requirement type="package" version="1.40.0">bioconductor-genomicranges</requirement>
        <requirement type="package" version="1.34.0">bioconductor-repitools</requirement>
        <requirement type="package" version="0.3.2.1">r-methylit</requirement>
        <requirement type="package" version="1.6.6">r-optparse</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
#import os
#import re
#set input_type = $input_type_cond.input_type
#set input_data_dir = 'input_data_dir'
#set output_data_dir = 'output_data_dir'
mkdir input_data_dir &&
mkdir output_data_dir &&
#if str($input_type) == "collection":
    #for $i in $input_type_cond.input_collection:
        #set file_name = $i.file_name
        ## We likely have an identifier that is a URL,
        ## so eliminate everything but the base file name.
        #set base_file_name = $i.element_identifier.split("/")[-1]
        #set identifier = re.sub('[^\s\w\-\\.]', '_', str($base_file_name))
        ln -s '$file_name' '$input_data_dir/$identifier' &&
    #end for
#end if
Rscript '$__tool_directory__/methylit_read_counts_2_granges_list.R'
#if str($input_type) == "single":
    --single_input '$input_type_cond.input_single'
    --output '$output_single'
#else:
    --input_data_dir '$input_data_dir'
    --output_data_dir '$output_data_dir'
#end if
#if $chromosomes and str($chromosomes) != '':
    --chromosomes '$chromosomes'
#end if
#if $chromosome_names and str($chromosome_names) != '':
    --chromosome_names '$chromosome_names'
#end if
#for $column_item in $column_repeat:
    #if str($column_item.column_name) == 'seqnames':
        --seqnames $column_item.column_number
    #elif str($column_item.column_name) == 'start':
        --start $column_item.column_number
    #elif str($column_item.column_name) == 'end':
        --end $column_item.column_number
    #elif str($column_item.column_name) == 'strand':
        --strand $column_item.column_number
    #elif str($column_item.column_name) == 'fraction':
        --fraction $column_item.column_number
    #elif str($column_item.column_name) == 'percent':
        --percent $column_item.column_number
    #elif str($column_item.column_name) == 'mC':
        --mC $column_item.column_number
    #elif str($column_item.column_name) == 'uC':
        --uC $column_item.column_number
    #elif str($column_item.column_name) == 'coverage':
        --coverage $column_item.column_number
    #elif str($column_item.column_name) == 'context':
        --context $column_item.column_number
    #end if
#end for
#if $pattern and str($pattern) != '':
    --pattern '$pattern'
#end if
#if $sample_id and str($sample_id) != '':
    --sample_id '$sample_id'
#end if
--script_dir '$__tool_directory__'
#if str($output_log_cond.output_log) == 'yes':
    &>'$output_log';
#else:
    &>output_log.txt;
    if [[ $? -ne 0 ]]; then
        #if str($input_type) == "single":
            cp output_log.txt '$output_single';
        #else:
            cp output_log.txt $output_data_dir/output_log.txt;
        #end if
    fi
#end if]]></command>
    <inputs>
        <conditional name="input_type_cond">
            <param name="input_type" type="select" label="Choose the category of the files to be analyzed">
                <option value="single" selected="true">Single files</option>
                <option value="collection">Collections of files</option>
            </param>
            <when value="single">
                <param name="input_single" type="data" format="tabular" label="Methylation count file"/>
            </when>
            <when value="collection">
                <param name="input_collection" type="data_collection" format="tabular" collection_type="list" label="Collection of methylation count files"/>
            </when>
        </conditional>
        <param name="chromosomes" type="text" value="" label="Chromosomes" help="Enter a comma-separated list if more than one item">
            <sanitizer invalid_char="">
                <valid initial="string.ascii_letters,string.digits">
                    <add value=","/>
                </valid>
            </sanitizer>
        </param>
        <param name="chromosome_names" type="text" value="" label="Chromosome names" help="Enter a comma-separated list if more than one item">
            <sanitizer invalid_char="">
                <valid initial="string.ascii_letters,string.digits">
                    <add value=","/>
                </valid>
            </sanitizer>
        </param>
        <repeat name="column_repeat" title="Column" min="1">
            <param name="column_name" type="select" display="radio" label="Column name">
                <option value="seqnames" selected="true">chromosomes</option>
                <option value="start">start</option>
                <option value="end">end</option>
                <option value="strand">strand</option>
                <option value="fraction">fraction</option>
                <option value="percent">methylation percentage</option>
                <option value="mC">methylates cytosine</option>
                <option value="uC">non-methylates cytosine</option>
                <option value="coverage">coverage</option>
                <option value="context">methylation context</option>
            </param>
            <param name="column_number" type="integer" value="1" min="1" label="Column number of the name selected above"/>
        </repeat>
        <param name="pattern" type="text" value="" label="Pattern">
            <sanitizer invalid_char="">
                <valid initial="string.ascii_letters,string.digits">
                    <add value=","/>
                    <add value="_"/>
                    <add value="^"/>
                    <add value="["/>
                    <add value="]"/>
                    <add value="."/>
                    <add value="*"/>
                </valid>
            </sanitizer>
        </param>
        <param name="sample_id" type="text" value="" label="Sample id" help="Enter a comma-separated list if more than one item">
            <sanitizer invalid_char="">
                <valid initial="string.ascii_letters,string.digits">
                    <add value=","/>
                    <add value="_"/>
                </valid>
            </sanitizer>
        </param>
        <conditional name="output_log_cond">
            <param name="output_log" type="select" label="Output process log?">
                <option value="yes" selected="true">Yes</option>
                <option value="no">No</option>
            </param>
            <when value="yes"/>
            <when value="no"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="output_log" format="txt" label="${tool.name} (process log) on ${on_string}">
            <filter>output_log_cond['output_log'] == 'yes'</filter>
        </data>
        <data name="output_single" format="grange">
            <filter>input_type_cond['input_type'] == "single"</filter>
        </data>
        <collection name="output_collection" type="list">
            <discover_datasets pattern="__name__" directory="output_data_dir" format="grange"/>
            <filter>input_type_cond['input_type'] == "collection"</filter>
        </collection>
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**

Reads files with methylation count table data downloaded from the GEO database or generated after the alignment of a BS-seq dataset,
producing a list of GRanges objects with the information provided.

Embryonic stem cells datasets

 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM2041nnn/GSM2041690/suppl//GSM2041690_WGBS_UCLA1_Primed_rep1_CGmethratio.tab.gz
 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM2041nnn/GSM2041691/suppl//GSM2041691_WGBS_UCLA1_Primed_rep2_CGmethratio.tab.gz
 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM2041nnn/GSM2041692/suppl//GSM2041692_WGBS_UCLA1_Primed_rep3_CGmethratio.tab.gz

 Breast tissues (normal, cancer, metastasis)

 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM1279nnn/GSM1279517/suppl//GSM1279517_CpGcontext.Breast.txt.gz
 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM1279nnn/GSM1279514/suppl//GSM1279514_CpGcontext.468PT.txt.gz
 - https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM1279nnn/GSM1279513/suppl//GSM1279513_CpGcontext.468LN.txt.gz
    </help>
    <expand macro="citations"/>
</tool>

